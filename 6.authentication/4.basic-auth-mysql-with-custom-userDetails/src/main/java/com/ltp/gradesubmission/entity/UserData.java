package com.ltp.gradesubmission.entity;

import lombok.*;

import javax.persistence.*;
import javax.validation.constraints.NotBlank;
import javax.validation.constraints.Size;
import java.util.List;

@Entity
@Table(name = "user_data")
@Data
@Builder
@RequiredArgsConstructor
@ToString(callSuper = true)
public class UserData {
    @NonNull
    @Id //this should not be autogenerated
    @Column(name = "username")
    @Size(min = 4, message = "Username length must be at least 4")
    @NotBlank
    private String username;

    @NonNull
    @Column(name = "password", nullable = false)
    @Size(min = 4, message = "Password length must be at least ")
    @NotBlank
    private String password;

    @NonNull
    @Column(name = "name")
    @NotBlank
    private String firstname;

    @NonNull
    @Column(name = "surname")
    @NotBlank
    private String surname;

    @NonNull
    @Column(name = "email")
    @NotBlank
    private String email;

    @NonNull
    @Column(name = "age")
    @NotBlank
    private Integer age;

    //cascade: when a user is deleted, all authorities pointing to it are deleted as well,
    @OneToMany(mappedBy = "username", cascade = CascadeType.ALL)
    private List<UserAuthority> authorities;

    //index = 0 --> old password;  index = 1 new password
    private List<String> passwordChange;

    private String role;

    public UserData() { };
}
